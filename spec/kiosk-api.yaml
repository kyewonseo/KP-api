---
swagger: "2.0"
info:
  version: "0.0.1"
  title: "Kiosk API"
host: "zf1oua0eo3.execute-api.ap-northeast-2.amazonaws.com"
basePath: "/dev"
schemes:
- "https"
paths:
  /orders/detail:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "OrderReq"
        required: true
        schema:
          $ref: "#/definitions/OrderReq"
      tags:
        - "orders"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/OrderRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/order/detail"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /orders/new:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Order"
        required: true
        schema:
            $ref: "#/definitions/NewOrderReq"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      tags:
        - "orders"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/NewOrderRes"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: "arn:aws:apigateway:ap-northeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-2:539277938309:function:kioskAPI_order_new/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /category/list-menu:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "SubcategoryReq"
        required: true
        schema:
          $ref: "#/definitions/SubcategoryReq"
      tags:
        - "categories"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SubcategoryRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/category/list-menu"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /menu/list:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MenuReq"
        required: true
        schema:
          $ref: "#/definitions/MenuReq"
      tags:
        - "menu"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MenuRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/menu/list"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /menu/detail:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MenuOptionReq"
        required: true
        schema:
          $ref: "#/definitions/MenuOptionReq"
      tags:
        - "menu"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MenuOptionRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/menu/detail"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
        
  /stores/accountList:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "StoresReq"
        required: true
        schema:
          $ref: "#/definitions/StoresReq"
      tags:
        - "stores"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StoresRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/store/accountList"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /account/login:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "LoginReq"
        required: true
        schema:
          $ref: "#/definitions/LoginReq"
      tags:
       - "users"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/LoginRes"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "http://175.207.13.212:9090/account/login"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
definitions:
  OrderReq:
    type: "object"
    properties:
      user_id: 
        type: "string"
      store_id:
        type: "string"
      orderBy:
        type: "string"
      startNo:
        type: "integer"
      cnt:
        type: "integer"
        
  OrderRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공여부"
      responseMsg:
        type: "string"
        description: "에러 코드"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            order_id:
              type: "string"
            order_num:
              type: "integer"
            store_id:
              type: "string"
            machine_id:
              type: "string"
            user_id:
              type: "string"
            amount:
              type: "number"
            coupon:
              type: "number"
            coupon_title:
              type: "string"
            discount:
              type: "number"
            discount_title:
              type: "string"
            price:
              type: "number"
              description: "결제금액 = 주문총액 - 쿠폰 - 할인"
            add_points:
              type: "number"
            order_status:
              type: "integer"
              description: "주문완료, 주문취소, 환불 , null"
            cook_status:
              type: "integer"
              description: "처리중, 처리완료"
            paymethod:
              type: "string"
              description: "현금,카드,포인트(1,0,0)"
            user_agent:
              type: "integer"
            cash:
              type: "number"
            card:
              type: "number"
            points:
              type: "number"
            package:
              type: "integer"
            registed_date:
              type: "string"
            detail:
              type: "array"
              items:
                type: "object"
                properties:
                  order_detail_id:
                    type: "string"
                  detail_menu_id:
                    type: "string"
                  detail_quantity:
                    type: "integer"
                  detail_file_id:
                    type: "string"
                  detail_menu_name:
                    type: "string"
                  detail_price:
                    type: "number"
                  detail_calory:
                    type: "integer"
                  detail_points:
                    type: "integer"
                  detail_description:
                    type: "string"
                  option:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        order_option_id:
                          type: "string"
                        option_menu_id:
                          type: "string"
                        option_quantity:
                          type: "integer"
                        option_file_id:
                          type: "string"
                        option_menu_name:
                          type: "string"
                        option_price:
                          type: "number"
                        option_calory:
                          type: "integer"
                        option_points:
                          type: "integer"
                        option_op:
                          type: "integer"
                        option_description:
                          type: "string"
                      
  NewOrderReq:
    type: "object"
    properties:
      order_id:
        type: "string"
      store_id:
        type: "string"
      machine_id:
        type: "string"
      user_id:
        type: "string"
      amount:
        type: "string"
        description: "주문총액"
      coupon:
        type: "string"
      coupon_title:
        type: "string"
      discount:
        type: "string"
      discount_title:
        type: "string"
      price:
        type: "string"
        description: "결제금액 = 주문총액-쿠폰-할인"
      add_points:
        type: "string"
      order_status:
        type: "string"
        description: "주문완료, 주문취소, 환불, null"
      cook_status:
        type: "string"
        description: "처리중, 처리완료"
      paymethod:
        type: "string"
        description: "현금, 카드, 포인트 (1,0,0), (1,1,1)"
      user_agent:
        type: "string"
        description: "매장, 모바일"
      cash:
        type: "string"
      card:
        type: "string"
      points:
        type: "string"
      package:
        type: "string"
        description: "포장선택 (0,1)"
      registe:
        type: "string"
  NewOrderRes:
    type: "object"
    properties:
      responseStatus:
        type: "string"
        description: "성공유부"
      responseMsg:
        type: "string"
        description: "응답 메시지"
        
  SubcategoryReq:
    type: "object"
    properties:
      store_id: 
        type: "string"
      orderBy:
        type: "string"
      startNo:
        type: "integer"
      cnt:
        type: "integer"
  SubcategoryRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공여부"
      responseMsg:
        type: "string"
        description: "응답 코드"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            sub_category_id:
              type: "string"
            sub_category_name:
              type: "string"
            file_id:
              type: "string"
              
  MenuReq:
    type: "object"
    properties:
      store_id: 
        type: "string"
      sub_category_id:
        type: "string"
      orderBy:
        type: "string"
      startNo:
        type: "integer"
      cnt:
        type: "integer"
  MenuRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공여부"
      responseMsg:
        type: "string"
        description: "응답 코드"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            menu_id:
              type: "string"
            sub_category_id:
              type: "string"
            m_item:
              type: "string"
              description: "메뉴명"
            m_type:
              type: "integer"
              description: "메뉴옵션 타입"
            price:
              type: "number"
            points:
              type: "integer"
            calory:
              type: "integer"
            barcode:
              type: "string"
            use_YN:
              type: "string"
              description: "판매여부"
            m_regidate:
              type: "string"
            description:
              type: "string"
              description: "메뉴설명"
            file_id:
              type: "string"
              
  MenuOptionReq:
    type: "object"
    properties:
      store_id: 
        type: "string"
      menu_id:
        type: "string"
      orderBy:
        type: "string"
      startNo:
        type: "integer"
      cnt:
        type: "integer"
  MenuOptionRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공여부"
      responseMsg:
        type: "string"
        description: "응답 코드"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            menu_id:
              type: "string"
            store_id:
              type: "string"
            sub_category_id:
              type: "string"
            inventory_id:
              type: "string"
            m_item:
              type: "string"
              description: "메뉴명"
            m_type:
              type: "integer"
              description: "메뉴옵션 타입"
            price:
              type: "number"
            points:
              type: "integer"
            calory:
              type: "integer"
            barcode:
              type: "string"
            description:
              type: "string"
              description: "메뉴설명"
            file_id:
              type: "string"
            options:
              type: "array"
              items:
                type: "object"
                properties:
                  category_id:
                    type: "string"
                  category_name:
                    type: "string"
                  option_type:
                    type: "integer"
                  data:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                        option:
                          type: "string"
                        price:
                          type: "number"
              
  StoresReq:
    type: "object"
    properties:
      account_id: 
        type: "string"
      orderBy:
        type: "string"
      startNo:
        type: "integer"
      cnt:
        type: "integer"
  StoresRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공여부"
      responseMsg:
        type: "string"
        description: "에러 코드"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            store_id:
              type: "string"
              description: "매장번호"
            user_id:
              type: "string"
            store:
              type: "string"
              description: "회사명"
            u_points:
              type: "integer"
              description: "스토어별 point"
            u_status:
              type: "integer"
            u_level:
              type: "string"
            s_address:
              type: "string"
            s_logo:
              type: "string"
            
  LoginRes:
    type: "object"
    properties:
      responseStatus:
        type: "integer"
        description: "성공유부"
      responseMsg:
        type: "string"
        description: "응답메시지"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            account_id:
              type: "string"
            name:
              type: "string"
            phone:
              type: "string"
            status:
              type: "integer"
  LoginReq:
    type: "object"
    properties:
      account_id:
        type: "string"
        description: "login id"
      passwd:
        type: "string"
        description: "login passward"
      push_token:
        type: "string"
        description: "firebase token"
