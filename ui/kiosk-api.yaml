swagger: '2.0'
info:
  version: 0.0.1
  title: Kiosk API
host: zf1oua0eo3.execute-api.ap-northeast-2.amazonaws.com
basePath: /dev
schemes:
  - https
paths:
  /account/login:
    post:
      tags:
        - account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: LoginReq
          required: true
          schema:
            $ref: '#/definitions/LoginReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/LoginRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/account/login'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /category/list-menu:
    post:
      tags:
        - category
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: SubcategoryReq
          required: true
          schema:
            $ref: '#/definitions/SubcategoryReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/SubcategoryRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/category/list-menu'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /menu/detail:
    post:
      tags:
        - menu
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: MenuOptionReq
          required: true
          schema:
            $ref: '#/definitions/MenuOptionReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/MenuOptionRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/menu/detail'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /menu/list:
    post:
      tags:
        - menu
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: MenuReq
          required: true
          schema:
            $ref: '#/definitions/MenuReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/MenuRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/menu/list'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /order/add:
    post:
      tags:
        - order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: AddOrderReq
          required: true
          schema:
            $ref: '#/definitions/AddOrderReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/AddOrderRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/order/add'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /order/payment-complete:
    post:
      tags:
        - order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: OrderCompleteReq
          required: true
          schema:
            $ref: '#/definitions/OrderCompleteReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/OrderCompleteRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/order/payment-complete'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /order/payment-list:
    post:
      tags:
        - order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: OrderReq
          required: true
          schema:
            $ref: '#/definitions/OrderReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/OrderRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/order/payment-list'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
  /store/accountList:
    post:
      tags:
        - store
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
        - in: body
          name: StoresReq
          required: true
          schema:
            $ref: '#/definitions/StoresReq'
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/StoresRes'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: 'http://kiosk.dabotop.com:8080/store/accountList'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
definitions:
  MenuReq:
    type: object
    properties:
      store_id:
        type: string
      sub_category_id:
        type: string
      orderBy:
        type: string
      startNo:
        type: integer
      cnt:
        type: integer
  MenuOptionRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공여부
      responseMsg:
        type: string
        description: 응답 코드
      data:
        type: array
        items:
          type: object
          properties:
            menu_id:
              type: string
            store_id:
              type: string
            sub_category_id:
              type: string
            inventory_id:
              type: string
            m_item:
              type: string
              description: 메뉴명
            m_type:
              type: integer
              description: 메뉴옵션 타입
            price:
              type: number
            points:
              type: number
            calory:
              type: integer
            barcode:
              type: string
            description:
              type: string
              description: 메뉴설명
            file_id:
              type: string
            options:
              type: array
              items:
                type: object
                properties:
                  category_id:
                    type: string
                  category_name:
                    type: string
                  option_type:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        option:
                          type: string
                        price:
                          type: number
  MenuOptionReq:
    type: object
    properties:
      store_id:
        type: string
      menu_id:
        type: string
      orderBy:
        type: string
      startNo:
        type: integer
      cnt:
        type: integer
  SubcategoryReq:
    type: object
    properties:
      store_id:
        type: string
      orderBy:
        type: string
      startNo:
        type: integer
      cnt:
        type: integer
  StoresReq:
    type: object
    properties:
      account_id:
        type: string
      admin_id:
        type: string
      orderBy:
        type: string
      startNo:
        type: integer
      cnt:
        type: integer
  SubcategoryRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공여부
      responseMsg:
        type: string
        description: 응답 코드
      data:
        type: array
        items:
          type: object
          properties:
            sub_category_id:
              type: string
            sub_category_name:
              type: string
            file_id:
              type: string
  OrderCompleteRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공유부
      responseMsg:
        type: string
        description: 응답 메시지
      data:
        type: object
        properties:
          order_num:
            type: integer
  StoresRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공여부
      responseMsg:
        type: string
        description: 에러 코드
      data:
        type: array
        items:
          type: object
          properties:
            store_id:
              type: string
              description: 매장번호
            user_id:
              type: string
            store:
              type: string
              description: 회사명
            u_points:
              type: number
              description: 스토어별 point
            u_status:
              type: integer
            u_level:
              type: string
            s_address:
              type: string
            s_logo:
              type: string
            s_tax:
              type: number
            s_phone:
              type: string
            s_pk:
              type: string
  AddOrderReq:
    type: object
    properties:
      store_id:
        type: string
      user_id:
        type: string
      price:
        type: string
      paymethod:
        type: string
        description: '현금,카드,포인트(0,1,0)'
      points:
        type: string
      add_points:
        type: string
      tax:
        type: string
      detail:
        type: array
        items:
          type: object
          properties:
            menu_id:
              type: string
            quantity:
              type: string
            option:
              type: array
              items:
                type: object
                properties:
                  menu_id:
                    type: string
                  quantity:
                    type: string
  OrderCompleteReq:
    type: object
    properties:
      order_id:
        type: string
      user_id:
        type: string
      store_id:
        type: string
      amount:
        type: string
      tax:
        type: string
      price:
        type: string
      cash:
        type: string
        description: 현금으로 계산한 가격
      card:
        type: string
        description: 카드로 계산한 가격
      points:
        type: string
        description: 포인트로 계산한 가격
  AddOrderRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공유부
      responseMsg:
        type: string
        description: 응답 메시지
      data:
        type: object
        properties:
          order_id:
            type: string
          soldOut:
            type: array
            items:
              type: object
              properties:
                menu_id:
                  type: string
                menu_name:
                  type: string
  LoginRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공유부
      responseMsg:
        type: string
        description: 응답메시지
      data:
        type: array
        items:
          type: object
          properties:
            account_id:
              type: string
            name:
              type: string
            phone:
              type: string
            status:
              type: integer
  MenuRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공여부
      responseMsg:
        type: string
        description: 응답 코드
      data:
        type: array
        items:
          type: object
          properties:
            menu_id:
              type: string
            sub_category_id:
              type: string
            m_item:
              type: string
              description: 메뉴명
            m_type:
              type: integer
              description: 메뉴옵션 타입
            price:
              type: number
            points:
              type: number
            calory:
              type: integer
            barcode:
              type: string
            use_YN:
              type: string
              description: 판매여부
            m_regidate:
              type: string
            description:
              type: string
              description: 메뉴설명
            file_id:
              type: string
  OrderReq:
    type: object
    properties:
      user_id:
        type: string
      store_id:
        type: string
      order_id:
        type: string
      orderBy:
        type: string
      startNo:
        type: integer
      cnt:
        type: integer
      orderByWith:
        type: string
  LoginReq:
    type: object
    properties:
      account_id:
        type: string
        description: login id
      passwd:
        type: string
        description: login passward
      push_token:
        type: string
        description: firebase token
  OrderRes:
    type: object
    properties:
      responseStatus:
        type: integer
        description: 성공여부
      responseMsg:
        type: string
        description: 에러 코드
      data:
        type: array
        items:
          type: object
          properties:
            order_id:
              type: string
            order_num:
              type: integer
            store_id:
              type: string
            machine_id:
              type: string
            user_id:
              type: string
            amount:
              type: number
            coupon:
              type: number
            coupon_title:
              type: string
            discount:
              type: number
            discount_title:
              type: string
            price:
              type: number
              description: 결제금액 = 주문총액 - 쿠폰 - 할인
            add_points:
              type: number
            order_status:
              type: integer
              description: '주문완료, 주문취소, 환불 , null'
            cook_status:
              type: integer
              description: '처리중, 처리완료'
            paymethod:
              type: string
              description: '현금,카드,포인트(1,0,0)'
            user_agent:
              type: integer
            cash:
              type: number
            card:
              type: number
            points:
              type: number
            tax:
              type: number
            package:
              type: integer
            regidate:
              type: string
            detail:
              type: array
              items:
                type: object
                properties:
                  order_detail_id:
                    type: string
                  detail_menu_id:
                    type: string
                  detail_quantity:
                    type: integer
                  detail_file_id:
                    type: string
                  detail_menu_name:
                    type: string
                  detail_price:
                    type: number
                  detail_calory:
                    type: integer
                  detail_points:
                    type: number
                  detail_description:
                    type: string
                  option:
                    type: array
                    items:
                      type: object
                      properties:
                        order_option_id:
                          type: string
                        option_menu_id:
                          type: string
                        option_quantity:
                          type: integer
                        option_file_id:
                          type: string
                        option_menu_name:
                          type: string
                        option_price:
                          type: number
                        option_calory:
                          type: integer
                        option_points:
                          type: number
                        option_op:
                          type: integer
                        option_description:
                          type: string
